services:
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ "gpu" ]
    volumes:
      - ollama:/root/.ollama # Ensure existing model data persists
    networks:
      - intranet
    restart: unless-stopped

  open-webui:
    image: ghcr.io/open-webui/open-webui:v0.6.1
    container_name: open-webui
    ports:
      - "5000:8080" # Maps container's port 8080 to host's port 5000
    networks:
      - intranet
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - open-webui:/app/backend/data
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ "gpu" ]

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    ports:
      - "5678:5678" # Maps container's port 5678 to host's port 5678
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USERNAME:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-changeme}
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=UTC
    volumes:
      - n8n:/home/node/.n8n
    networks:
      - intranet
    restart: unless-stopped

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    command: tunnel run Ollama
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARED_TUNNEL_TOKEN}
    networks:
      - intranet
    restart: unless-stopped

networks:
  intranet:
    driver: bridge

volumes:
  ollama:
    external: true
  open-webui:
    external: true
  n8n:
    external: true
